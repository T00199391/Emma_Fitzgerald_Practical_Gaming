Movement Script:
Update() - will check to see if the player presses the p button to pause the game. If the button is pressed then paused will be set to true. If paused is true then the player will not be able to move, attack or shield.
isMoving() - determines if the player presses wasd and sets moving to true. If the buttons are not pressed then moving is set to false and the animation for moving is stopped. If moving is set to true then the method moveCharacter() is called
moveCharacter() - This is called when moving is set to true. It will check to see what button(wasd) is being pressed and move the character according to that button press. It will start the moving animation
isSprinting() - determines if the player presses the left shift to sprint. If the button is pressed then sprinting is set to true and the sprinting animation will begin. If the button is not pressed then sprinitng will be set to false and the spriniting animation will not begin. If sprinting is set to true it will call the method characterSprinting()
characterSprinting() - This method calls the moveCharacter() method and passes in the sprinting speed
isAttacking() - determines if the player presses the left mouse button to attack. If the player presse the button then attacking will be set to true and the attack animation will be triggered. There will be a cool down to how much the player can attack so they cant attack continuously. If attacking is true then it will call the method playerAttack()
playerAttack() - will check to see if the player is shielding. If the player is not shielding then it will create a ray cast to see if the player is near enoung to an enemy to deal damage. If the player is close enough to the enemy it will call the helathDecrease() method from the EnemyHealth script
attack() - return thats that the pplayer is attacking
isShielding() - determines if the player is pressing the right mouse button. If the button is pressed the shielding will be set to true
playerShield() - 

ImageResizing Script:
Start() - will get the RectTranform for the canvas and the image on the canvas
Update() - will change the size of the image on the canvas when the canvas chanages size

Score Script:
Start() - will set the score test at the start of the game to 0
Update() - will update the text of the score throughout the game
scoreIncrease() - when the method is called it will increase the current score by 100

Timer Script:
Update() - will check to see if the player presses the p button to pause the game. If the button is pressed then paused will be set to true. If paused is true then the timer will stop. If paused is false then the timer will go down. It will display the time in minutes and seconds. If the timer goes to 0 then it will call the method gameOver() and set the text of the timer to an empty string
gameOver() - when called it will set the animation for the player to it losing and set the gameover text to Game Over

CameraControl Script:
Start() -  will set the position of the piviot to be the same position as the player. It will make it that the cursor is not shown on the game screen
Update() - will keep makeing the pivot position the same as the players. It will determine the rotation of the camera based on how much the player moves the mouse. It make the camera move around the player. It will make sure it is always looking at the player

EnemyHealth Script:
Update() - will cheack to see if isDead is set to true. if true then a timer will start so the death animation of the enemy can play. once the timer is up the enemy gameobject will be destroyed and the timer will be reset
healthDecrease() - when called it will decrease the health of the enemy by 10. it will also call the method enemyDied()
enemyDied() - will check to see if the current health of the enemy is greater than 0. if not then the death animation for the enemy will run. it will also call the scoreIncrease() method form the Score script. it will set isDead to true

EnemyController():
playerHealthDecrease() - will decrese the value of the health slider for the player

Patrol,Chase,Attack,NPCBaseFSM Scritps:
control the animation for the enemy

GolbinAI Script:
Start() - will get the components of the animator for the enemy and get the components for the EnemyController
Update() - will ccheck the distance between the player and the enemy and determine when the amiantion change for the enemy is
StartAttacking() - will ckeck to see if the player is shielding. if not then a timer will start so that mid way through the attack animation the player will lose health. it will call the playerHealthDecrease() method from the EnemyController script
StopAttacking() - will set isAttacking to false so it will stop the animation

ChangeText Script:
changeText() - it takes off the start game and control text and brings up the loading text

SceneSwitcher Script:
Start() - will get the components from the ChangeText script
GoToFightScene() - will call the changeText() method form the ChangeText script. when the Start Game button is pressed the scene will change to the Fight scene
GoToControlScene() - when the Controls button is pressed the scene will change to the Control scene
GoToMenuScene() - when the Back To Menu button is pressed the scene will change to the Menu scene